trigger:
  branches:
    include:
    - main
  paths:
    include:
    - infrastructure/**

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: terraform-variables
  - name: TF_WORKSPACE
    value: 'default'
  - name: TF_VAR_location
    value: 'eastus'
  - name: TF_VAR_service_principal_id
    value: $(SERVICE_PRINCIPAL_ID)

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: Plan
    displayName: 'Plan'
    steps:
    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/capability'
        backendServiceArm: 'Azure Subscription'
        backendAzureRmResourceGroupName: 'wedding-api-capability-rg'
        backendAzureRmStorageAccountName: 'weddingapistate'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/capability'
        environmentServiceNameAzureRM: 'Azure Subscription'

- stage: Apply
  displayName: 'Terraform Apply'
  dependsOn: Plan
  condition: succeeded()
  jobs:
  - deployment: Apply
    displayName: 'Apply'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/capability'
              backendServiceArm: 'Azure Subscription'
              backendAzureRmResourceGroupName: 'wedding-api-capability-rg'
              backendAzureRmStorageAccountName: 'weddingapistate'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/capability'
              environmentServiceNameAzureRM: 'Azure Subscription' 