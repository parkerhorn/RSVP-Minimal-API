trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - source/**

parameters:
  - name: environment
    type: string
    default: 'dev'
    values:
      - dev
      - prod

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet packages'
      inputs:
        command: 'restore'
        projects: 'source/WeddingApi.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: 'source/WeddingApi.sln'
        arguments: '--configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: 'source/WeddingApi.sln'
        arguments: '--configuration Release --collect:"XPlat Code Coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'source/WeddingApi.sln'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployApp
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Web App'
            inputs:
              azureSubscription: 'Azure Subscription'
              appName: 'wedding-api-${{ parameters.environment }}'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto' 