trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - 'source/**/*.cs'
      - 'tests/**/*.cs'
      - 'source/**/*.csproj'
      - 'tests/**/*.csproj'
      - 'WeddingApi.sln'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8.0 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
        includePreviewVersions: false

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet packages'
      inputs:
        command: 'restore'
        projects: 'WeddingApi.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: 'WeddingApi.sln'
        arguments: '--configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: 'tests/WeddingApi.UnitTests/WeddingApi.UnitTests.csproj'
        arguments: '--configuration Release --collect:"XPlat Code Coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'source/WeddingApi.csproj'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy_Dev
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToDev
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Dev Web App'
            inputs:
              azureSubscription: 'Azure Subscription'
              appName: 'wedding-api-dev'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto'

- stage: Deploy_Prod
  dependsOn: Deploy_Dev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToProd
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Prod Web App'
            inputs:
              azureSubscription: 'Azure Subscription'
              appName: 'wedding-api-prod'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto' 