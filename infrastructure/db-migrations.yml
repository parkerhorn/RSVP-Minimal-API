trigger:
  branches:
    include:
      - main
  paths:
    include:
      - source/Migrations/**
      - source/WeddingApi.csproj
      - infrastructure/db-migrations.yml

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  projectPath: 'source/WeddingApi.csproj'
  solutionPath: 'source/WeddingApi.sln'
  efArtifactName: 'efmigrator'
  SQLServerAdminLogin: 'weddingadmin' 
  CapabilityKeyVaultName: 'lennyandparkerweddingkv'
  SQLAdminPasswordSecretName: 'sql-server-admin-password'
  SQLServerName: 'wedding-api-sql-server'

stages:
- stage: Build
  displayName: 'Build EF Migrator'
  jobs:
  - job: Build
    displayName: 'Build .NET Project and EF Tool'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'

    - script: dotnet tool install --global dotnet-ef
      displayName: 'Install/Update dotnet-ef tool'

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet packages'
      inputs:
        command: 'restore'
        projects: '$(solutionPath)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        command: 'build'
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Publish EF Migrator'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(projectPath)'
        arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)/$(efArtifactName)'
        zipAfterPublish: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: $(efArtifactName)'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(efArtifactName)'
        ArtifactName: '$(efArtifactName)'
        publishLocation: 'Container'

- stage: Deploy_Dev_Migrations
  displayName: 'Deploy Dev DB Migrations'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployDev
    displayName: 'Apply Migrations to Dev DB'
    environment: 'dev'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UseDotNet@2
            displayName: 'Use .NET SDK'
            inputs:
              packageType: 'sdk'
              version: '8.x'

          - script: dotnet tool install --global dotnet-ef
            displayName: 'Install/Update dotnet-ef tool on agent'

          - task: DownloadBuildArtifacts@1
            displayName: 'Download EF Migrator Artifact'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(efArtifactName)'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureKeyVault@2
            displayName: 'Get SQL Admin Password from Capability Key Vault'
            inputs:
              azureSubscription: 'Azure Subscription'
              KeyVaultName: '$(CapabilityKeyVaultName)'
              SecretsFilter: '$(SQLAdminPasswordSecretName)'
              RunAsPreJob: false

          - script: |
              echo "Current Environment Name: $(Environment.Name)"
              FULL_DB_NAME="WeddingApi-$(Environment.Name)"
              SQL_SERVER_FQDN="$(SQLServerName).database.windows.net"
              
              CONN_STRING="Server=tcp:$SQL_SERVER_FQDN,1433;Initial Catalog=$FULL_DB_NAME;Persist Security Info=False;User ID=$(SQLServerAdminLogin);Password=$($(SQLAdminPasswordSecretName));MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
              
              echo "Applying migrations to $FULL_DB_NAME on $SQL_SERVER_FQDN..."

              cd $(System.ArtifactsDirectory)/$(efArtifactName)
              dotnet ef database update --assembly WeddingApi.dll --startup-assembly WeddingApi.dll --connection "$CONN_STRING" --verbose
            displayName: 'Apply EF Migrations to Dev'

- stage: Deploy_Prod_Migrations
  displayName: 'Deploy Prod DB Migrations'
  dependsOn: Deploy_Dev_Migrations
  condition: succeeded()
  jobs:
  - deployment: DeployProd
    displayName: 'Apply Migrations to Prod DB'
    environment: 'prod'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UseDotNet@2
            displayName: 'Use .NET SDK'
            inputs:
              packageType: 'sdk'
              version: '8.x'

          - script: dotnet tool install --global dotnet-ef
            displayName: 'Install/Update dotnet-ef tool on agent'

          - task: DownloadBuildArtifacts@1
            displayName: 'Download EF Migrator Artifact'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(efArtifactName)'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureKeyVault@2
            displayName: 'Get SQL Admin Password from Capability Key Vault'
            inputs:
              azureSubscription: 'Azure Subscription'
              KeyVaultName: '$(CapabilityKeyVaultName)'
              SecretsFilter: '$(SQLAdminPasswordSecretName)'
              RunAsPreJob: false

          - script: |
              echo "Current Environment Name: $(Environment.Name)"
              FULL_DB_NAME="WeddingApi-$(Environment.Name)"
              SQL_SERVER_FQDN="$(SQLServerName).database.windows.net"
              
              CONN_STRING="Server=tcp:$SQL_SERVER_FQDN,1433;Initial Catalog=$FULL_DB_NAME;Persist Security Info=False;User ID=$(SQLServerAdminLogin);Password=$($(SQLAdminPasswordSecretName));MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
              
              echo "Applying migrations to $FULL_DB_NAME on $SQL_SERVER_FQDN..."
              
              cd $(System.ArtifactsDirectory)/$(efArtifactName)
              dotnet ef database update --assembly WeddingApi.dll --startup-assembly WeddingApi.dll --connection "$CONN_STRING" --verbose
            displayName: 'Apply EF Migrations to Prod' 